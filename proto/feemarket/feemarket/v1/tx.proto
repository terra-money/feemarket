syntax = "proto3";
package feemarket.feemarket.v1;

import "feemarket/feemarket/v1/params.proto";
import "feemarket/feemarket/v1/genesis.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/skip-mev/feemarket/x/feemarket/types";

// Message service defines the types of messages supported by the feemarket
// module.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Params defines a method for updating the feemarket module parameters.
  rpc Params(MsgParams) returns (MsgParamsResponse);

  // State defines a method for updating the feemarket module states.
  rpc FeeDenomParam(MsgFeeDenomParam) returns (MsgFeeDenomParamResponse);
}

// MsgParams defines the Msg/Params request type. It contains the
// new parameters for the feemarket module.
message MsgParams {
  option (cosmos.msg.v1.signer) = "authority";

  // Params defines the new parameters for the feemarket module.
  Params params = 1 [ (gogoproto.nullable) = false ];
  // Authority defines the authority that is updating the feemarket module
  // parameters.
  string authority = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// MsgParamsResponse defines the Msg/Params response type.
message MsgParamsResponse {}

// MsgFeeDenomParam defines the Msg/FeeDenomParam request type. It contains the
// new feeDenomParam of feeDenom for the feemarket module.
message MsgFeeDenomParam {
  option (cosmos.msg.v1.signer) = "authority";

  // State defines the new state for the feemarket module.
  FeeDenomParam fee_denom_param = 1 [ (gogoproto.nullable) = false ];
  // Authority defines the authority that is updating the feemarket module
  // parameters.
  string authority = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// MsgFeeDenomParamResponse defines the Msg/State response type.
message MsgFeeDenomParamResponse {}