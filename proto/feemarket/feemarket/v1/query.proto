syntax = "proto3";
package feemarket.feemarket.v1;

option go_package = "github.com/skip-mev/feemarket/x/feemarket/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";
import "feemarket/feemarket/v1/params.proto";
import "feemarket/feemarket/v1/genesis.proto";

// Query Service for the feemarket module.
service Query {
  // Params returns the current feemarket module parameters.
  rpc Params(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http) = {
      get : "/feemarket/v1/params"
    };
  };

  // State returns the current feemarket module state.
  rpc State(StateRequest) returns (StateResponse) {
    option (google.api.http) = {
      get : "/feemarket/v1/state"
    };
  };

  // State returns the feeDenomParam of feeDenom.
  rpc FeeDenomParam(FeeDenomParamRequest) returns (FeeDenomParamResponse) {
    option (google.api.http) = {
      get : "/feemarket/v1/fee_denom_param/{fee_denom}"
    };
  };

  // BaseFee returns the current feemarket module base fee.
  rpc BaseFee(BaseFeeRequest) returns (BaseFeeResponse) {
    option (google.api.http) = {
      get : "/feemarket/v1/base_fee/{fee_denom}"
    };
  };
}

// ParamsRequest is the request type for the Query/Params RPC method.
message ParamsRequest {}

// ParamsResponse is the response type for the Query/Params RPC method.
message ParamsResponse { Params params = 1 [ (gogoproto.nullable) = false ]; }

// StateRequest is the request type for the Query/State RPC method.
message StateRequest {}

// StateResponse is the response type for the Query/State RPC method.
message StateResponse { State state = 1 [ (gogoproto.nullable) = false ]; }

// FeeDenomParamRequest is the request type for the Query/State RPC method.
message FeeDenomParamRequest {
  string fee_denom = 1;
}

// FeeDenomParamResponse is the response type for the Query/State RPC method.
message FeeDenomParamResponse { repeated FeeDenomParam fee_denom_params = 1 [ (gogoproto.nullable) = false ]; }

// BaseFeeRequest is the request type for the Query/BaseFee RPC method.
message BaseFeeRequest {
  string fee_denom = 1;
}

// StateResponse is the response type for the Query/BaseFee RPC method.
message BaseFeeResponse {
  cosmos.base.v1beta1.DecCoin fee = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_dec_coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoin"
  ];
}
